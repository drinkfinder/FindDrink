// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using drinkfinder.Models;

namespace Drinkfinder.Api.Migrations
{
    [DbContext(typeof(DrinkFinderContext))]
    partial class DrinkFinderContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("drinkfinder.Models.Drink", b =>
                {
                    b.Property<int>("drinkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("drinkInstruction");

                    b.Property<string>("drinkName");

                    b.Property<int>("drinkSelected");

                    b.HasKey("drinkId");

                    b.ToTable("Drinks");
                });

            modelBuilder.Entity("drinkfinder.Models.Ingredient", b =>
                {
                    b.Property<int>("ingredientId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("drinkId");

                    b.Property<string>("ingredientName");

                    b.Property<int>("isSelected");

                    b.HasKey("ingredientId");

                    b.HasIndex("drinkId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("drinkfinder.Models.UserIngredient", b =>
                {
                    b.Property<int>("useringredientId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("useringredientName");

                    b.HasKey("useringredientId");

                    b.ToTable("UserIngredients");
                });

            modelBuilder.Entity("drinkfinder.Models.Ingredient", b =>
                {
                    b.HasOne("drinkfinder.Models.Drink")
                        .WithMany("drinkIngredients")
                        .HasForeignKey("drinkId");
                });
#pragma warning restore 612, 618
        }
    }
}
